{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alessandra\\\\Documents\\\\SquadsFy\\\\squadsfy\\\\src\\\\componentes\\\\Player\\\\Search\\\\index.js\";\nimport React, { useState } from 'react';\nimport { Tabs, Tab, Form, Button } from 'react-bootstrap';\nimport { propTypes } from 'react-bootstrap/esm/Image';\n\nfunction Search(props) {\n  const [album, setAlbum] = useState({});\n  const [artista, setArtista] = useState({});\n  const [foundArtista, setFoundArtista] = useState({});\n  const [foundAlbum, setFoundAlbum] = useState({});\n\n  async function handleSearchArtista() {\n    const found = await fetch(`http://ws.audioscrobbler.com/2.0/?method=artist.search&artist=${artista}&api_key=cfedf7f80f5776d69845ed9dd0b397e3&format=json`).then(response => {\n      if (response.ok) return response.json();\n    });\n    setFoundArtista(found.results.artistmatches);\n    props.found({\n      match: found.results.artistmatches,\n      title: \"Artistas encontrados\"\n    });\n  }\n\n  async function handleSearchAlbum() {}\n\n  return /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: \"artista\",\n    id: \"uncontrolled-tab-example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"artista\",\n    title: \"Artista\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, \"Buscar por artista\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: event => setArtista(event.target.value),\n    placeholder: \"Digite o nome do artista\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSearchArtista,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Buscar\"))), /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"album\",\n    title: \"Album\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Buscar por album\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: event => setAlbum(event.target.value),\n    placeholder: \"Digite o nome do album\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSearchAlbum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Buscar\"))));\n}\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/Alessandra/Documents/SquadsFy/squadsfy/src/componentes/Player/Search/index.js"],"names":["React","useState","Tabs","Tab","Form","Button","propTypes","Search","props","album","setAlbum","artista","setArtista","foundArtista","setFoundArtista","foundAlbum","setFoundAlbum","handleSearchArtista","found","fetch","then","response","ok","json","results","artistmatches","match","title","handleSearchAlbum","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Tabs, Tab, Form, Button } from 'react-bootstrap';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\n\r\nfunction Search(props) {\r\n    const [ album, setAlbum ] = useState({});\r\n    const [ artista, setArtista ] = useState({});\r\n    const [ foundArtista, setFoundArtista ] = useState({});\r\n    const [ foundAlbum, setFoundAlbum ] = useState({});\r\n\r\n    async function handleSearchArtista(){\r\n        const found = await fetch(`http://ws.audioscrobbler.com/2.0/?method=artist.search&artist=${artista}&api_key=cfedf7f80f5776d69845ed9dd0b397e3&format=json`)\r\n                                .then(response => {\r\n                                    if (response.ok)\r\n                                        return response.json();\r\n                                });\r\n        setFoundArtista(found.results.artistmatches);\r\n        props.found({match: found.results.artistmatches, title: \"Artistas encontrados\"});             \r\n    }\r\n\r\n    async function handleSearchAlbum(){\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Tabs defaultActiveKey=\"artista\" id=\"uncontrolled-tab-example\">\r\n            <Tab eventKey=\"artista\" title=\"Artista\">\r\n                <Form >\r\n                    <Form.Group>\r\n                        <Form.Label>Buscar por artista</Form.Label>\r\n                        <Form.Control onChange={event => setArtista(event.target.value)} placeholder=\"Digite o nome do artista\" />\r\n                    </Form.Group>\r\n                    <Button onClick={handleSearchArtista}>Buscar</Button>\r\n                </Form>\r\n            </Tab>\r\n            <Tab eventKey=\"album\" title=\"Album\">\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Buscar por album</Form.Label>\r\n                        <Form.Control onChange={event => setAlbum(event.target.value)} placeholder=\"Digite o nome do album\" />\r\n                    </Form.Group>\r\n                    <Button onClick={handleSearchAlbum}>Buscar</Button>\r\n                </Form> \r\n            </Tab>\r\n        </Tabs>\r\n    );\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}