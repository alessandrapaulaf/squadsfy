{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alessandra\\\\Documents\\\\SquadsFy\\\\squadsfy\\\\src\\\\componentes\\\\Player\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport List from './List';\nimport { Row, Col } from 'react-bootstrap';\nimport Search from './Search';\n\nfunction Player() {\n  const [topArtistas, setTopArtistas] = useState({});\n  const [foundValues, setFoundValues] = useState({});\n  const [title, setTitle] = useState(\"Top 10 Artistas\");\n  useEffect(() => {\n    fetch('http://ws.audioscrobbler.com/2.0/?method=chart.gettopartists&api_key=cfedf7f80f5776d69845ed9dd0b397e3&format=json&page=1&limit=10').then(response => {\n      return response.json();\n    }).then(data => {\n      setTopArtistas(data.artists.artist);\n    });\n  }, []);\n\n  function changeValues(values) {\n    setFoundValues(values.match.artist);\n    setTitle(values.title);\n  }\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, title), topArtistas.length && /*#__PURE__*/React.createElement(List, {\n    values: foundValues.length > 0 ? foundValues : topArtistas,\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    found: values => changeValues(values),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Player;","map":{"version":3,"sources":["C:/Users/Alessandra/Documents/SquadsFy/squadsfy/src/componentes/Player/index.js"],"names":["React","useEffect","useState","List","Row","Col","Search","Player","topArtistas","setTopArtistas","foundValues","setFoundValues","title","setTitle","fetch","then","response","json","data","artists","artist","changeValues","values","match","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,MAAT,GAAkB;AACd,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAEQ,WAAF,EAAeC,cAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAEU,KAAF,EAASC,QAAT,IAAsBX,QAAQ,CAAC,iBAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,KAAK,CAAC,mIAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHL,EAIKF,IAJL,CAIUG,IAAI,IAAI;AACVT,MAAAA,cAAc,CAACS,IAAI,CAACC,OAAL,CAAaC,MAAd,CAAd;AACH,KANL;AAOH,GARQ,EAQN,EARM,CAAT;;AAUA,WAASC,YAAT,CAAsBC,MAAtB,EAA6B;AACzBX,IAAAA,cAAc,CAACW,MAAM,CAACC,KAAP,CAAaH,MAAd,CAAd;AACAP,IAAAA,QAAQ,CAACS,MAAM,CAACV,KAAR,CAAR;AACH;;AAED,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAL,CADJ,EAGQJ,WAAW,CAACgB,MAAZ,iBACA,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEd,WAAW,CAACc,MAAZ,GAAqB,CAArB,GAAyBd,WAAzB,GAAuCF,WAArD;AAAkE,IAAA,KAAK,EAAEI,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CADJ,CADJ,eAUI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAGU,MAAD,IAAYD,YAAY,CAACC,MAAD,CADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVJ,CADJ;AAiBH;;AAED,eAAef,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport List from './List';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Search from './Search';\r\n\r\nfunction Player() {\r\n    const [ topArtistas, setTopArtistas ] = useState({});\r\n    const [ foundValues, setFoundValues ] = useState({});\r\n    const [ title, setTitle ] = useState(\"Top 10 Artistas\");\r\n\r\n    useEffect(() => {\r\n        fetch('http://ws.audioscrobbler.com/2.0/?method=chart.gettopartists&api_key=cfedf7f80f5776d69845ed9dd0b397e3&format=json&page=1&limit=10')\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                setTopArtistas(data.artists.artist);\r\n            })\r\n    }, []);\r\n    \r\n    function changeValues(values){\r\n        setFoundValues(values.match.artist);\r\n        setTitle(values.title);\r\n    }\r\n\r\n    return(\r\n        <Row>\r\n            <Col md={4}>\r\n                <div className=\"list\">\r\n                    <h1>{title}</h1>\r\n                    {\r\n                        topArtistas.length && \r\n                        <List values={foundValues.length > 0 ? foundValues : topArtistas} title={title} />\r\n                    }\r\n                </div>\r\n            </Col>\r\n            <Col md={4}>\r\n                <Search \r\n                    found={(values) => changeValues(values)}/>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Player;"]},"metadata":{},"sourceType":"module"}